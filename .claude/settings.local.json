{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(rmdir:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(touch:*)",
      "Bash(npm install)",
      "Bash(npm run type-check:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 10s npm start)",
      "Bash(timeout 15s npm run dev)",
      "Bash(timeout 15s npx ts-node -r tsconfig-paths/register src/app.ts)",
      "Bash(timeout 10s npx ts-node -r tsconfig-paths/register src/app.ts)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(npx ts-node:*)",
      "Bash(node:*)",
      "Bash(PORT=3002 node src/app-simple.js)",
      "Bash(pkill:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote set-url:*)",
      "Bash(git config:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(docker-compose:*)",
      "Bash(docker:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx tsc:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(claude ask context-plan-keeper)",
      "Bash(claude ask backend-api-developer \"Backend PPM - ocena stanu i priorytetyzacja napraw TypeScript\n\nAKTUALNY STAN BACKENDU:\n‚úÖ POZYTYWNE:\n- Prisma Schema: Kompletnie przepracowany, 100% zgodny z design.md (11 modeli, 10 enum√≥w, 15+ indeks√≥w)\n- OAuth System: Google + Microsoft authentication foundation gotowy\n- Express Infrastructure: Solid foundation z TypeScript + middleware\n- Docker Setup: Kompletna konfiguracja + health checks\n- Migracje: Performance indexes przygotowane\n\n‚ùå KRYTYCZNE PROBLEMY:\n- TypeScript: 46 b≈Çƒôd√≥w kompilacji (g≈Ç√≥wnie user.model.ts vs Prisma types conflicts)\n- Database Services: Nieuruchomione (Docker)\n- Manual interfaces: Konflikt z generated Prisma types\n\nüìä DIAGNOSTIC REPORT WSKAZUJE:\n- Phase 1 (45 min): Fix typu conflicts - user.model.ts vs Prisma\n- Phase 2 (30 min): JWT + Redis configuration fixes  \n- Phase 3 (15 min): Docker environment setup\n- Phase 4 (20 min): Database operations testing\n\nPYTANIA:\n1. Czy 46 b≈Çƒôd√≥w TypeScript blokuje przej≈õcie do ETAP 2 (CRUD Produkt√≥w)?\n2. Kt√≥rƒÖ fazƒô napraw traktowaƒá jako highest priority?\n3. Czy commit obecny stan z Prisma improvements czy czekaƒá na fixes?\n4. Jakie tasks dla coding-style-agent w jakiej kolejno≈õci?\n5. Czy infrastruktura jest gotowa na implementacjƒô API endpoints?\n\nPotrzebujƒô professional assessment i action plan dla zespo≈Çu.\")",
      "Bash(claude ask architect \"PPM Architecture Planning - ETAP 2 Implementation\n\nAKTUALNY STAN PROJEKTU:\n‚úÖ ETAP 1 KOMPLETNY:\n- Backend Infrastructure: Express + TypeScript + Prisma + OAuth ready\n- Database Schema: 11 modeli, 10 enum√≥w, production-ready\n- TypeScript Compilation: ZERO b≈Çƒôd√≥w\n- Docker Setup: Complete infrastructure\n- Authentication: Google + Microsoft OAuth working\n\nüéØ ETAP 2 TARGET: ZarzƒÖdzanie produktami (6-8 tygodni)\n- 2.1 CRUD Produkt√≥w (Tydzie≈Ñ 1-2) - NASTƒòPNY KROK\n- 2.2 ZarzƒÖdzanie sklep√≥w (Tydzie≈Ñ 2-3)  \n- 2.3 System kategorii (Tydzie≈Ñ 3-4)\n- 2.4 ZarzƒÖdzanie zdjƒôƒá (Tydzie≈Ñ 4-6)\n- 2.5 Rich Text Editor (Tydzie≈Ñ 6-8)\n\nKLUCZOWE PYTANIA ARCHITEKTONICZNE:\n1. Jaka struktura API endpoints dla Product CRUD (RESTful patterns)?\n2. Jak zorganizowaƒá Product-Shop-Category relationships w API?\n3. Czy potrzebujemy GraphQL dla complex queries czy REST wystarczy?\n4. Jaka strategia dla image handling i file storage?\n5. Jak zaprojektowaƒá preview/validation workflow przed eksportem?\n\nTECHNICZNE DECYZJE:\n- Database: PostgreSQL main + MySQL compatibility\n- API: RESTful + mo≈ºliwe GraphQL later\n- File Storage: Local storage + S3 compatibility\n- Caching: Redis for sessions + data caching\n- Queue: Bull for background jobs\n\nPotrzebujƒô architectural blueprint i implementation roadmap dla ETAP 2.1.\")"
    ],
    "deny": []
  }
}